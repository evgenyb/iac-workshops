{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.17.1.54307",
      "templateHash": "14118428230945477362"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "westeurope",
      "metadata": {
        "description": "Resources location"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.10",
      "metadata": {
        "description": "Two first segments of Virtual Network address prefix. For example, if the address prefix is 10.10.0.0/22, then the value of this parameter should be 10.10"
      }
    },
    "prefix": {
      "type": "string",
      "defaultValue": "iac-ws4",
      "metadata": {
        "description": "Lab resources prefix."
      }
    },
    "sqlAdminPassword": {
      "type": "securestring"
    }
  },
  "variables": {
    "tenantId": "[tenant().tenantId]",
    "resourceGroupName": "[format('{0}-rg', parameters('prefix'))]",
    "uniqueStr": "[uniqueString(subscription().subscriptionId, subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName')))]",
    "acrName": "[format('iacws4{0}acr', variables('uniqueStr'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2022-09-01",
      "name": "[variables('resourceGroupName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "logAnalyticsWorkspace",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "16823217245622754467"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "variables": {
            "uniqueStr": "[uniqueString(subscription().subscriptionId, resourceGroup().id)]",
            "logAnalyticsWorkspaceName": "[format('{0}-{1}-log', parameters('prefix'), variables('uniqueStr'))]",
            "logAnalyticsRetentionInDays": 60
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[variables('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": "[variables('logAnalyticsRetentionInDays')]"
              }
            }
          ],
          "outputs": {
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
            },
            "name": {
              "type": "string",
              "value": "[variables('logAnalyticsWorkspaceName')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "VirtualNetwork",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "vnetAddressPrefix": {
            "value": "[parameters('vnetAddressPrefix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "15699365015354826783"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "vnetAddressPrefix": {
              "type": "string"
            }
          },
          "variables": {
            "virtualNetworkName": "[format('{0}-vnet', parameters('prefix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-07-01",
              "name": "[variables('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[format('{0}.0.0/22', parameters('vnetAddressPrefix'))]"
                  ]
                },
                "subnets": [
                  {
                    "name": "AzureBastionSubnet",
                    "properties": {
                      "addressPrefix": "[format('{0}.0.0/26', parameters('vnetAddressPrefix'))]"
                    }
                  },
                  {
                    "name": "GatewaySubnet",
                    "properties": {
                      "addressPrefix": "[format('{0}.0.128/27', parameters('vnetAddressPrefix'))]"
                    }
                  },
                  {
                    "name": "capp-snet",
                    "properties": {
                      "addressPrefix": "[format('{0}.2.0/23', parameters('vnetAddressPrefix'))]",
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled",
                      "delegations": []
                    }
                  },
                  {
                    "name": "testvm-snet",
                    "properties": {
                      "addressPrefix": "[format('{0}.0.64/26', parameters('vnetAddressPrefix'))]"
                    }
                  },
                  {
                    "name": "plinks-snet",
                    "properties": {
                      "addressPrefix": "[format('{0}.1.0/24', parameters('vnetAddressPrefix'))]"
                    }
                  },
                  {
                    "name": "dnsresolver-inbound-snet",
                    "properties": {
                      "addressPrefix": "[format('{0}.0.160/28', parameters('vnetAddressPrefix'))]",
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[variables('virtualNetworkName')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "acrPrivateDnsZone",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "linkedVNetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork'), '2022-09-01').outputs.id.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "2961034712991170941"
            }
          },
          "parameters": {
            "linkedVNetId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "privatelink.azurecr.io",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', 'privatelink.azurecr.io', uniqueString(parameters('linkedVNetId')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('linkedVNetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azurecr.io')]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azurecr.io')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "privateManagedEnv",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalyticsWorkspace'), '2022-09-01').outputs.name.value]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/capp-snet', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork'), '2022-09-01').outputs.id.value)]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "2087365472192452069"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "logAnalyticsName": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            }
          },
          "variables": {
            "containerAppsEnvironmentName": "[format('{0}-private-menv', parameters('prefix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2022-10-01",
              "name": "[variables('containerAppsEnvironmentName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Consumption"
              },
              "properties": {
                "vnetConfiguration": {
                  "internal": true,
                  "infrastructureSubnetId": "[parameters('subnetId')]"
                },
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName')), '2022-10-01').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName')), '2022-10-01').primarySharedKey]"
                  }
                },
                "zoneRedundant": false
              }
            }
          ],
          "outputs": {
            "environmentId": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvironmentName'))]"
            },
            "staticIP": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvironmentName')), '2022-10-01').staticIp]"
            },
            "defaultDomain": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvironmentName')), '2022-10-01').defaultDomain]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalyticsWorkspace')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "AzureContainerRegistry",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acrName": {
            "value": "[variables('acrName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "acrPrivateDnsZoneId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'acrPrivateDnsZone'), '2022-09-01').outputs.id.value]"
          },
          "privateLinkSubnetId": {
            "value": "[format('{0}/subnets/plinks-snet', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork'), '2022-09-01').outputs.id.value)]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "17356151762124217760"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "acrName": {
              "type": "string"
            },
            "acrPrivateDnsZoneId": {
              "type": "string"
            },
            "privateLinkSubnetId": {
              "type": "string"
            }
          },
          "variables": {
            "pleName": "[format('{0}-ple', parameters('acrName'))]",
            "groupName": "registry",
            "privateDnsZoneName": "privatelink.azurecr.io"
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-01-01-preview",
              "name": "[parameters('acrName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Premium"
              },
              "properties": {
                "publicNetworkAccess": "Disabled",
                "networkRuleSet": {
                  "defaultAction": "Deny",
                  "ipRules": []
                },
                "adminUserEnabled": false,
                "networkRuleBypassOptions": "AzureServices"
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-09-01",
              "name": "[variables('pleName')]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[variables('pleName')]",
                    "properties": {
                      "groupIds": [
                        "[variables('groupName')]"
                      ],
                      "privateLinkServiceId": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))]"
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('privateLinkSubnetId')]"
                },
                "customDnsConfigs": [
                  {
                    "fqdn": "[format('{0}.azurecr.io', parameters('acrName'))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', variables('pleName'), format('{0}-PrivateDnsZoneGroup', variables('groupName')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[variables('privateDnsZoneName')]",
                    "properties": {
                      "privateDnsZoneId": "[parameters('acrPrivateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('pleName'))]"
              ]
            }
          ],
          "outputs": {
            "acrId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))]"
            },
            "acrName": {
              "type": "string",
              "value": "[parameters('acrName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'acrPrivateDnsZone')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "vpnGateway",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "gatewaySubnetId": {
            "value": "[format('{0}/subnets/GatewaySubnet', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork'), '2022-09-01').outputs.id.value)]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "tenantId": {
            "value": "[variables('tenantId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "2062238158539016851"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "gatewaySubnetId": {
              "type": "string"
            },
            "tenantId": {
              "type": "securestring"
            }
          },
          "variables": {
            "vpnGatewayName": "[format('{0}-vgw', parameters('prefix'))]",
            "vpnGatewayPublicIPName": "[format('{0}-pip', variables('vpnGatewayName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-09-01",
              "name": "[variables('vpnGatewayPublicIPName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworkGateways",
              "apiVersion": "2022-09-01",
              "name": "[variables('vpnGatewayName')]",
              "location": "[parameters('location')]",
              "properties": {
                "enablePrivateIpAddress": false,
                "ipConfigurations": [
                  {
                    "name": "default",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vpnGatewayPublicIPName'))]"
                      },
                      "subnet": {
                        "id": "[parameters('gatewaySubnetId')]"
                      }
                    }
                  }
                ],
                "natRules": [],
                "virtualNetworkGatewayPolicyGroups": [],
                "enableBgpRouteTranslationForNat": false,
                "disableIPSecReplayProtection": false,
                "sku": {
                  "name": "VpnGw1",
                  "tier": "VpnGw1"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false,
                "activeActive": false,
                "vpnClientConfiguration": {
                  "vpnClientAddressPool": {
                    "addressPrefixes": [
                      "172.0.0.0/16"
                    ]
                  },
                  "vpnClientProtocols": [
                    "OpenVPN"
                  ],
                  "vpnAuthenticationTypes": [
                    "AAD"
                  ],
                  "vpnClientRootCertificates": [],
                  "vpnClientRevokedCertificates": [],
                  "vngClientConnectionConfigurations": [],
                  "radiusServers": [],
                  "vpnClientIpsecPolicies": [],
                  "aadTenant": "[format('https://login.microsoftonline.com/{0}/', parameters('tenantId'))]",
                  "aadAudience": "41b23e61-6c1e-4545-b367-cd054e0ed4b4",
                  "aadIssuer": "[format('https://sts.windows.net/{0}/', parameters('tenantId'))]"
                },
                "customRoutes": {
                  "addressPrefixes": []
                },
                "vpnGatewayGeneration": "Generation1",
                "allowRemoteVnetTraffic": false,
                "allowVirtualWanTraffic": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('vpnGatewayPublicIPName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "dnsResolver",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/dnsresolver-inbound-snet', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork'), '2022-09-01').outputs.id.value)]"
          },
          "vnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork'), '2022-09-01').outputs.id.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "14690220041669309349"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "vnetId": {
              "type": "string"
            }
          },
          "variables": {
            "dnsResolverName": "[format('{0}-dnsresolver', parameters('prefix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/dnsResolvers",
              "apiVersion": "2022-07-01",
              "name": "[variables('dnsResolverName')]",
              "location": "[parameters('location')]",
              "properties": {
                "virtualNetwork": {
                  "id": "[parameters('vnetId')]"
                }
              }
            },
            {
              "type": "Microsoft.Network/dnsResolvers/inboundEndpoints",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', variables('dnsResolverName'), 'inbound')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "subnet": {
                      "id": "[parameters('subnetId')]"
                    },
                    "privateIpAllocationMethod": "Dynamic"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/dnsResolvers', variables('dnsResolverName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "privateMenvPrivateDnsZone",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "privateDnsZoneName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'privateManagedEnv'), '2022-09-01').outputs.defaultDomain.value]"
          },
          "linkedVNetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork'), '2022-09-01').outputs.id.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "4446327598051737159"
            }
          },
          "parameters": {
            "privateDnsZoneName": {
              "type": "string"
            },
            "linkedVNetId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('privateDnsZoneName')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), uniqueString(parameters('linkedVNetId')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('linkedVNetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'privateManagedEnv')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appInsights",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "workspaceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalyticsWorkspace'), '2022-09-01').outputs.id.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "8358263151225317747"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "workspaceId": {
              "type": "string"
            }
          },
          "variables": {
            "appInsightsName": "[format('{0}-appi', parameters('prefix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[variables('appInsightsName')]",
              "location": "[parameters('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "RetentionInDays": 90,
                "WorkspaceResourceId": "[parameters('workspaceId')]",
                "IngestionMode": "LogAnalytics",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            }
          ],
          "outputs": {
            "connectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').ConnectionString]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'logAnalyticsWorkspace')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "sql",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "prefix": {
            "value": "[parameters('prefix')]"
          },
          "linkedVNetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork'), '2022-09-01').outputs.id.value]"
          },
          "privateLinkSubnetId": {
            "value": "[format('{0}/subnets/plinks-snet', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork'), '2022-09-01').outputs.id.value)]"
          },
          "adminPassword": {
            "value": "[parameters('sqlAdminPassword')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.17.1.54307",
              "templateHash": "1095113226838106748"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "prefix": {
              "type": "string"
            },
            "privateLinkSubnetId": {
              "type": "string"
            },
            "linkedVNetId": {
              "type": "string"
            },
            "adminPassword": {
              "type": "securestring"
            }
          },
          "variables": {
            "sqlServerName": "[format('{0}-sql', parameters('prefix'))]",
            "pleName": "[format('{0}-ple', variables('sqlServerName'))]",
            "groupName": "sqlServer",
            "privateDnsZoneName": "privatelink.database.windows.net",
            "databaseName": "[format('{0}-sqldb', parameters('prefix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[variables('privateDnsZoneName')]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('privateDnsZoneName'), uniqueString(parameters('linkedVNetId')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('linkedVNetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
              ]
            },
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2022-08-01-preview",
              "name": "[variables('sqlServerName')]",
              "location": "[parameters('location')]",
              "properties": {
                "administratorLogin": "sql-admin",
                "administratorLoginPassword": "[parameters('adminPassword')]",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Disabled",
                "restrictOutboundNetworkAccess": "Disabled"
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-09-01",
              "name": "[variables('pleName')]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[variables('pleName')]",
                    "properties": {
                      "groupIds": [
                        "[variables('groupName')]"
                      ],
                      "privateLinkServiceId": "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('privateLinkSubnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', variables('pleName'), format('{0}-PrivateDnsZoneGroup', variables('groupName')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[variables('privateDnsZoneName')]",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', variables('pleName'))]"
              ]
            },
            {
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2021-08-01-preview",
              "name": "[format('{0}/{1}', variables('sqlServerName'), variables('databaseName'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic",
                "tier": "Basic"
              },
              "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 1073741824,
                "zoneRedundant": false,
                "readScale": "Disabled",
                "highAvailabilityReplicaCount": 0,
                "autoPauseDelay": 0,
                "requestedBackupStorageRedundancy": "Local",
                "isLedgerOn": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'VirtualNetwork')]"
      ]
    }
  ]
}